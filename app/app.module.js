"use strict";
const core_1 = require("@angular/core");
const platform_1 = require("nativescript-angular/platform");
const forms_1 = require("nativescript-angular/forms");
const http_1 = require("nativescript-angular/http");
const router_1 = require("nativescript-angular/router");
const app_routing_1 = require("./app.routing");
const app_component_1 = require('./app.component');
const current_user_service_1 = require('./shared/current-user/current-user.service');
const element_registry_1 = require("nativescript-angular/element-registry");
element_registry_1.registerElement("DropDown", () => require("nativescript-drop-down/drop-down").DropDown);
let AppModule = class AppModule {
};
AppModule = __decorate([
    core_1.NgModule({
        imports: [
            platform_1.NativeScriptModule,
            forms_1.NativeScriptFormsModule,
            http_1.NativeScriptHttpModule,
            router_1.NativeScriptRouterModule,
            router_1.NativeScriptRouterModule.forRoot(app_routing_1.routes)
        ],
        declarations: [
            app_component_1.AppComponent,
            ...app_routing_1.navigatableComponents,
        ],
        providers: [current_user_service_1.CurrentUserService],
        bootstrap: [app_component_1.AppComponent]
    }), 
    __metadata('design:paramtypes', [])
], AppModule);
exports.AppModule = AppModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHVCQUF5QixlQUFlLENBQUMsQ0FBQTtBQUl6QywyQkFBbUMsK0JBQStCLENBQUMsQ0FBQTtBQUNuRSx3QkFBd0MsNEJBQTRCLENBQUMsQ0FBQTtBQUNyRSx1QkFBdUMsMkJBQTJCLENBQUMsQ0FBQTtBQUNuRSx5QkFBeUMsNkJBQTZCLENBQUMsQ0FBQTtBQUV2RSw4QkFBOEMsZUFBZSxDQUFDLENBQUE7QUFFOUQsZ0NBQTZCLGlCQUFpQixDQUFDLENBQUE7QUFlL0MsdUNBQW1DLDRDQUE0QyxDQUFDLENBQUE7QUFVaEYsbUNBQWdDLHVDQUF1QyxDQUFDLENBQUE7QUFDeEUsa0NBQWUsQ0FBQyxVQUFVLEVBQUUsTUFBTSxPQUFPLENBQUMsa0NBQWtDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQWlCeEY7QUFBd0IsQ0FBQztBQWZ6QjtJQUFDLGVBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRTtZQUNSLDZCQUFrQjtZQUNqQiwrQkFBdUI7WUFDdkIsNkJBQXNCO1lBQ3RCLGlDQUF3QjtZQUN4QixpQ0FBd0IsQ0FBQyxPQUFPLENBQUMsb0JBQU0sQ0FBQztTQUN6QztRQUNELFlBQVksRUFBRTtZQUNiLDRCQUFZO1lBQ1osR0FBRyxtQ0FBcUI7U0FDeEI7UUFDRCxTQUFTLEVBQUUsQ0FBQyx5Q0FBa0IsQ0FBQztRQUMvQixTQUFTLEVBQUUsQ0FBQyw0QkFBWSxDQUFDO0tBQzFCLENBQUM7O2FBQUE7QUFDVyxpQkFBUyxZQUFHLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gICBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEh0dHBNb2R1bGUgfSAgICBmcm9tICdAYW5ndWxhci9odHRwJztcclxuXHJcbmltcG9ydCB7IE5hdGl2ZVNjcmlwdE1vZHVsZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9wbGF0Zm9ybVwiO1xyXG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRGb3Jtc01vZHVsZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9mb3Jtc1wiO1xyXG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRIdHRwTW9kdWxlIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL2h0dHBcIjtcclxuaW1wb3J0IHsgTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL3JvdXRlclwiO1xyXG5cclxuaW1wb3J0IHsgcm91dGVzLCBuYXZpZ2F0YWJsZUNvbXBvbmVudHMgfSBmcm9tIFwiLi9hcHAucm91dGluZ1wiO1xyXG5cclxuaW1wb3J0IHsgQXBwQ29tcG9uZW50IH0gZnJvbSAnLi9hcHAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ2hhcnRlckNvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvY2hhcnRlci9jaGFydGVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNodXR0bGVDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3NodXR0bGUvc2h1dHRsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEYXNoYm9hcmRDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRmJvQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9mYm8vZmJvLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZib0RldGFpbENvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvZmJvL2Ziby1kZXRhaWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTG9naW5Db21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1lbnVDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL21lbnUvbWVudS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNcm9Db21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL21yby9tcm8uY29tcG9uZW50JztcclxuaW1wb3J0IHsgTXJvRGV0YWlsQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9tcm8vbXJvLWRldGFpbC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOYXZiYXJDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL25hdmJhci9uYXZiYXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUGFzc3BvcnRKZXRDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3Bhc3Nwb3J0amV0L3Bhc3Nwb3J0amV0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBhc3Nwb3J0SmV0Sm9pbkNvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvcGFzc3BvcnRqZXQvcGFzc3BvcnRqZXQtam9pbi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQcm9maWxlYmFyQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9wcm9maWxlYmFyL3Byb2ZpbGViYXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2lnbnVwQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEN1cnJlbnRVc2VyU2VydmljZSB9IGZyb20gJy4vc2hhcmVkL2N1cnJlbnQtdXNlci9jdXJyZW50LXVzZXIuc2VydmljZSc7XHJcblxyXG5pbXBvcnQgeyBQcm9maWxlVmlld0NvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvcHJvZmlsZXZpZXcvcHJvZmlsZXZpZXcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvZmlsZVNodXR0bGVIaXN0b3J5Q29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9wcm9maWxldmlldy9wcm9maWxlLXNodXR0bGUtaGlzdG9yeS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQcm9maWxlU2h1dHRsZURldGFpbHNDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3Byb2ZpbGV2aWV3L3Byb2ZpbGUtc2h1dHRsZS1kZXRhaWxzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFByb2ZpbGVDaGFydGVySGlzdG9yeUNvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvcHJvZmlsZXZpZXcvcHJvZmlsZS1jaGFydGVyLWhpc3RvcnkuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvZmlsZUNoYXJ0ZXJEZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9wcm9maWxldmlldy9wcm9maWxlLWNoYXJ0ZXItZGV0YWlscy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQcm9maWxlRWRpdERldGFpbHNDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3Byb2ZpbGV2aWV3L3Byb2ZpbGUtZWRpdC1kZXRhaWxzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFN1Z2dlc3Rpb25Db21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3N1Z2dlc3Rpb24vc3VnZ2VzdGlvbi5jb21wb25lbnQnO1xyXG5cclxuaW1wb3J0IHsgcmVnaXN0ZXJFbGVtZW50IH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL2VsZW1lbnQtcmVnaXN0cnlcIjtcclxucmVnaXN0ZXJFbGVtZW50KFwiRHJvcERvd25cIiwgKCkgPT4gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC1kcm9wLWRvd24vZHJvcC1kb3duXCIpLkRyb3BEb3duKTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gIFx0TmF0aXZlU2NyaXB0TW9kdWxlLFxyXG4gICAgTmF0aXZlU2NyaXB0Rm9ybXNNb2R1bGUsXHJcbiAgICBOYXRpdmVTY3JpcHRIdHRwTW9kdWxlLFxyXG4gICAgTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLFxyXG4gICAgTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzKVxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgXHRBcHBDb21wb25lbnQsXHJcbiAgXHQuLi5uYXZpZ2F0YWJsZUNvbXBvbmVudHMsXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtDdXJyZW50VXNlclNlcnZpY2VdLFxyXG4gIGJvb3RzdHJhcDogW0FwcENvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEFwcE1vZHVsZSB7fVxyXG4iXX0=