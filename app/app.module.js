"use strict";
const core_1 = require("@angular/core");
const platform_1 = require("nativescript-angular/platform");
const forms_1 = require("nativescript-angular/forms");
const http_1 = require("nativescript-angular/http");
const router_1 = require("nativescript-angular/router");
const app_routing_1 = require("./app.routing");
const app_component_1 = require('./app.component');
const current_user_service_1 = require('./shared/current-user/current-user.service');
let AppModule = class AppModule {
};
AppModule = __decorate([
    core_1.NgModule({
        imports: [
            platform_1.NativeScriptModule,
            forms_1.NativeScriptFormsModule,
            http_1.NativeScriptHttpModule,
            router_1.NativeScriptRouterModule,
            router_1.NativeScriptRouterModule.forRoot(app_routing_1.routes)
        ],
        declarations: [
            app_component_1.AppComponent,
            ...app_routing_1.navigatableComponents,
        ],
        providers: [current_user_service_1.CurrentUserService],
        bootstrap: [app_component_1.AppComponent]
    }), 
    __metadata('design:paramtypes', [])
], AppModule);
exports.AppModule = AppModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHVCQUF5QixlQUFlLENBQUMsQ0FBQTtBQUl6QywyQkFBbUMsK0JBQStCLENBQUMsQ0FBQTtBQUNuRSx3QkFBd0MsNEJBQTRCLENBQUMsQ0FBQTtBQUNyRSx1QkFBdUMsMkJBQTJCLENBQUMsQ0FBQTtBQUNuRSx5QkFBeUMsNkJBQTZCLENBQUMsQ0FBQTtBQUV2RSw4QkFBOEMsZUFBZSxDQUFDLENBQUE7QUFFOUQsZ0NBQTZCLGlCQUFpQixDQUFDLENBQUE7QUFlL0MsdUNBQW1DLDRDQUE0QyxDQUFDLENBQUE7QUEyQmhGO0FBQXdCLENBQUM7QUFmekI7SUFBQyxlQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUiw2QkFBa0I7WUFDakIsK0JBQXVCO1lBQ3ZCLDZCQUFzQjtZQUN0QixpQ0FBd0I7WUFDeEIsaUNBQXdCLENBQUMsT0FBTyxDQUFDLG9CQUFNLENBQUM7U0FDekM7UUFDRCxZQUFZLEVBQUU7WUFDYiw0QkFBWTtZQUNaLEdBQUcsbUNBQXFCO1NBQ3hCO1FBQ0QsU0FBUyxFQUFFLENBQUMseUNBQWtCLENBQUM7UUFDL0IsU0FBUyxFQUFFLENBQUMsNEJBQVksQ0FBQztLQUMxQixDQUFDOzthQUFBO0FBQ1csaUJBQVMsWUFBRyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9ICAgZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBIdHRwTW9kdWxlIH0gICAgZnJvbSAnQGFuZ3VsYXIvaHR0cCc7XHJcblxyXG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRNb2R1bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcGxhdGZvcm1cIjtcclxuaW1wb3J0IHsgTmF0aXZlU2NyaXB0Rm9ybXNNb2R1bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgTmF0aXZlU2NyaXB0SHR0cE1vZHVsZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9odHRwXCI7XHJcbmltcG9ydCB7IE5hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9yb3V0ZXJcIjtcclxuXHJcbmltcG9ydCB7IHJvdXRlcywgbmF2aWdhdGFibGVDb21wb25lbnRzIH0gZnJvbSBcIi4vYXBwLnJvdXRpbmdcIjtcclxuXHJcbmltcG9ydCB7IEFwcENvbXBvbmVudCB9IGZyb20gJy4vYXBwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENoYXJ0ZXJDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL2NoYXJ0ZXIvY2hhcnRlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTaHV0dGxlQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9zaHV0dGxlL3NodXR0bGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGFzaGJvYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZib0NvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvZmJvL2Ziby5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGYm9EZXRhaWxDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL2Ziby9mYm8tZGV0YWlsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvZ2luQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9tZW51L21lbnUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTXJvQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9tcm8vbXJvLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1yb0RldGFpbENvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvbXJvL21yby1kZXRhaWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmF2YmFyQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBhc3Nwb3J0SmV0Q29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9wYXNzcG9ydGpldC9wYXNzcG9ydGpldC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQYXNzcG9ydEpldEpvaW5Db21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3Bhc3Nwb3J0amV0L3Bhc3Nwb3J0amV0LWpvaW4uY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvZmlsZWJhckNvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvcHJvZmlsZWJhci9wcm9maWxlYmFyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNpZ251cENvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDdXJyZW50VXNlclNlcnZpY2UgfSBmcm9tICcuL3NoYXJlZC9jdXJyZW50LXVzZXIvY3VycmVudC11c2VyLnNlcnZpY2UnO1xyXG5cclxuaW1wb3J0IHsgUHJvZmlsZVZpZXdDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3Byb2ZpbGV2aWV3L3Byb2ZpbGV2aWV3LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFByb2ZpbGVTaHV0dGxlSGlzdG9yeUNvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvcHJvZmlsZXZpZXcvcHJvZmlsZS1zaHV0dGxlLWhpc3RvcnkuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvZmlsZVNodXR0bGVEZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9wcm9maWxldmlldy9wcm9maWxlLXNodXR0bGUtZGV0YWlscy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQcm9maWxlQ2hhcnRlckhpc3RvcnlDb21wb25lbnQgfSBmcm9tICcuL3BhZ2VzL3Byb2ZpbGV2aWV3L3Byb2ZpbGUtY2hhcnRlci1oaXN0b3J5LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFByb2ZpbGVDaGFydGVyRGV0YWlsc0NvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvcHJvZmlsZXZpZXcvcHJvZmlsZS1jaGFydGVyLWRldGFpbHMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvZmlsZUVkaXREZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9wcm9maWxldmlldy9wcm9maWxlLWVkaXQtZGV0YWlscy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTdWdnZXN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlcy9zdWdnZXN0aW9uL3N1Z2dlc3Rpb24uY29tcG9uZW50JztcclxuXHJcblxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgXHROYXRpdmVTY3JpcHRNb2R1bGUsXHJcbiAgICBOYXRpdmVTY3JpcHRGb3Jtc01vZHVsZSxcclxuICAgIE5hdGl2ZVNjcmlwdEh0dHBNb2R1bGUsXHJcbiAgICBOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUsXHJcbiAgICBOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUuZm9yUm9vdChyb3V0ZXMpXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICBcdEFwcENvbXBvbmVudCxcclxuICBcdC4uLm5hdmlnYXRhYmxlQ29tcG9uZW50cyxcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW0N1cnJlbnRVc2VyU2VydmljZV0sXHJcbiAgYm9vdHN0cmFwOiBbQXBwQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXBwTW9kdWxlIHt9XHJcbiJdfQ==